<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <section name="PowerwallService.My.MySettings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    </sectionGroup>
  </configSections>
  <connectionStrings>
    <!--  PWHistory connection string used for logging if LogData set to true.  If you don't have a local and azure database, or only have a local database, use this connection string-->
    <add name="PowerwallService.My.MySettings.PWHistory" connectionString="Server=tcp:TODO.database.windows.net,1433;Initial Catalog=PWHistory;Persist Security Info=True;User ID=TODO;Password=TODO;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;" />
    <!--  PWHistoryLocal connection string used for logging if LogAzureOnly set to false - for compact obs only.  Use this connection string and set LogAzureOnly to false if you want a backup log of six second readings-->
    <add name="PowerwallService.My.MySettings.PWHistoryLocal" connectionString="Data Source=TODO;Initial Catalog=PWHistory;Persist Security Info=True;User ID=TODO;Password=TODO" />
  </connectionStrings>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.1" />
  </startup>
  <applicationSettings>
    <PowerwallService.My.MySettings>
      <setting name="LogData" serializeAs="String">
        <!--Controls all logging.  Set to False if you haven't set up a database-->
        <value>False</value>
      </setting>
      <setting name="LogAzureOnly" serializeAs="String">
        <!--If set to true, only the first connection is used for logging.  If set to False, the second connection is used for compact obs only-->
        <value>True</value>
      </setting>
      <setting name="LogCompactOnly" serializeAs="String">
        <!--Set to True to only log to CompactObs - leave as false to log all data from site, load, solar and battery-->
        <value>False</value>
      </setting>
      <setting name="PVOutputAPIKey" serializeAs="String">
        <!--Your PVOutput API Key-->
        <value>TODO</value>
      </setting>
      <setting name="PVOutputSID" serializeAs="String">
        <!--Your PVOutput SID-->
        <value>TODO</value>
      </setting>
      <setting name="PVSendForecast" serializeAs="String">
        <!--Used if you want to send forecast data to PVOutput-->
        <value>False</value>
      </setting>
      <setting name="PVSendLoad" serializeAs="String">
        <!--Should the service upload consumption to PVOutput (to V4 - the standard consumption parameter) (from the Powerwall load.instant_power meter)-->
        <value>False</value>
      </setting>
      <setting name="PVSendPowerwall" serializeAs="String">
        <!--Used if you want to send logged powerwall data to PVOutput-->
        <value>False</value>
      </setting>
      <setting name="PVSendPV" serializeAs="String">
        <!--Should the service upload PV generation to PVOutput (to V2 - the standard generation parameter) (from the Powerwall solar.instant_power meter)-->
        <value>False</value>
      </setting>
      <setting name="PVSendVoltage" serializeAs="String">
        <!--Should the service upload Voltage to PVOutput (to V6 - the standard voltage parameter) (from the Powerwall site.instant_average_voltage meter)-->
        <value>False</value>
      </setting>
      <setting name="PVSendForecastAs" serializeAs="String">
        <!--The Extended Parameter Name for sending Forecast - Note: the corresponding PVvNN parameter must be set to an empty string-->
        <value>v12</value>
      </setting>
      <setting name="PVv7" serializeAs="String">
        <!--The data to send to extended parameter 7
        	based on meter_measure where meter is site, load, solar, battery, and measure are the measures you see in /api/meters/aggregates
        	leave blank to not send any data to this parameter
        	leave blank if you have selected this parameter for solar forecast data-->
        <value>battery_instant_power</value>
      </setting>
      <setting name="PVv8" serializeAs="String">
        <!--The data to send to extended parameter 8 - as above for parameter 7-->
        <value>load_instant_power</value>
      </setting>
      <setting name="PVv9" serializeAs="String">
        <!--The data to send to extended parameter 9 - as above for parameter 7-->
        <value>soc_state_of_charge</value>
      </setting>
      <setting name="PVv10" serializeAs="String">
        <!--The data to send to extended parameter 10 - as above for parameter 7-->
        <value>site_instant_power</value>
      </setting>
      <setting name="PVv11" serializeAs="String">
        <!--The data to send to extended parameter 11 - as above for parameter 7-->
        <value>battery_instant_average_voltage</value>
      </setting>
      <setting name="PVv12" serializeAs="String">
        <!--The data to send to extended parameter 12 - as above for parameter 7-->
        <value />
      </setting>
      <setting name="PWGatewayAddress" serializeAs="String">
        <!--Enter your powerwall gateway address here - this is just the IP address as shown below-->
        <value>http://192.168.TODO.TODO</value>
      </setting>
      <setting name="PWGatewayUsername" serializeAs="String">
        <!--Username to use to log into the powerwall gateway.  Probably ignored.  Put your email or leave blank.  Might work best with non-blank well formed but non-existent email-->
        <value>TODO@gmail.com</value>
      </setting>
      <setting name="PWGatewayPassword" serializeAs="String">
        <!--This is the serial number of your powerwall gateway (with a preceding S - so starts with ST typically-->
        <value>ST0000TODO</value>
      </setting>
      <setting name="PWChargeModeBackup" serializeAs="String">
        <!--Specify True if you want to force charging by setting the charge mode to backup
              If set to False - by default - charge mode will be set by setting the backup_reserve_percentage to the target charge state
              	If the powerwall is close to this target state, rather than charge to the specified percentage, it will go into standby (to stay at / close to target)
              If you'd prefer to force charging, set to True - and the charge mode will be set by setting the operation mode to backup as well as setting the reserve percentage
              	This will force charging if the powerwall was close to the target charge state (until it is about 5% over the target
                -->
        <value>False</value>
      </setting>
      <setting name="PWMinBackupPercentage" serializeAs="String">
        <!--Set this to the minimum backup percentage you want the service to set when exiting charge mode
            Do not set below 0 - it appears the powerwall ignores this and sets it to 40
            Do not set above 100 - it's unlikely the powerwall will accept that setting
            Recommended to set it to 5 if you want the entire capacity to be used for self consumption - this equates to 0% set in the official app
            -->
        <value>5</value>
      </setting>
      <setting name="PWOvernightLoad" serializeAs="String">
        <!--Put the average discharge (as percentage of charge) here - this is the amount that your house uses from the start of off-peak in the evening to the start of peak in the morning
            For example, if you typically have 60% charge at 11pm, and 25% charge at 7am, then put 35 here-->
        <value>35</value>
      </setting>
      <setting name="PWMorningBuffer" serializeAs="String">
        <!--Put a "just in case" buffer here to allow for early morning use before the sun comes up - this is added to the overnight load, and the pre-charge routine attempts to make sure you
            always have that buffer available at the end of the off peak period, regardless of the next day's expected solar generation-->
        <value>10</value>
      </setting>
      <setting name="PWPeakConsumption" serializeAs="String">
        <!--This is the usual or average amount of energy you use (from any source) during peak hours-->
        <value>17500</value>
      </setting>
      <setting name="PWSelfConsumption" serializeAs="String">
        <!--CURRENTLY NOT USED - This is the usual or average amount of energy you use from solar during solar hours-->
        <value>13000</value>
      </setting>
      <setting name="PWCapacity" serializeAs="String">
        <!--This is the capacity of your Powerwall.  If you have more than one, put the total capacity here-->
        <value>13500</value>
      </setting>
      <setting name="PWRoundTripEfficiency" serializeAs="String">
        <!--NOT CURRENTLY USED - Planned for potential future automated decision on whether to charge or discharge or export.  How much energy you get out for what you store.  0.85 = 85% efficiency-->
        <value>0.85</value>
      </setting>
      <setting name="SolcastAddress" serializeAs="String">
        <!--No need to change-->
        <value>https://api.solcast.com.au/pv_power/forecasts?longitude={0}&amp;latitude={1}&amp;capacity={2}&amp;tilt={3}&amp;azimuth={4}&amp;install_date={5:yyyyMMdd}&amp;api_key={6}&amp;format=json</value>
      </setting>
      <setting name="SolcastAPIKey" serializeAs="String">
        <!--Obtain and API key from solcast.com.au and put it here to obtain forecasts for your solar system-->
        <value>TODO</value>
      </setting>
      <setting name="PVSystemLongitude" serializeAs="String">
        <!--Put your longitude here - use google maps to work it out-->
        <value>140.00TODO</value>
      </setting>
      <setting name="PVSystemLattitude" serializeAs="String">
        <!--Put your lattitude here - use google maps to work it out-->
        <value>-35.00TODO</value>
      </setting>
      <setting name="PVSystemCapacity" serializeAs="String">
        <!--Put your PV system capacity here-->
        <value>5000TODO</value>
      </setting>
      <setting name="PVSystemTilt" serializeAs="String">
        <!--Put your PV system tilt or elevation here-->
        <value>30TODO</value>
      </setting>
      <setting name="PVSystemAzimuth" serializeAs="String">
        <!--Put your PV system azimuth here (what compass direction does it face? 0 for north, 90 for east, 270 for west, and so on-->
        <value>0TODO</value>
      </setting>
      <setting name="PVSystemInstallDate" serializeAs="String">
        <!--Put your PV system install date here in yyyy-MM-dd format - this allows solcast to take into account aging in the forecast-->
        <value>2017-01-26TODO</value>
      </setting>
      <setting name="PVReportingEnabled" serializeAs="String">
        <!--Do you want to load any data to PVOutput - if so, set to True-->
        <value>False</value>
      </setting>
      <setting name="TariffIgnoresDST" serializeAs="String">
        <!--This is HARD to explain
                    Your tariff IGNORES DST (daylight saving time) if peak time starts at one particular time of the year in winter, but a different time in summer
                    For example, CitiPower's peak tariff runs from 7am to 11pm in Winter.
                    But, during daylight saving time, it runs from 8am to midnight.  This is because they, in effect, ignore daylight saving time, so their system 
                    says that - when your clock says 8am in summer - that it is 7am, and the peak period is just starting.
                    This is important: it means that you can't start pre-charging until midnight during DST, but you can keep pre-charging (if required) until 8am.
                    You will need to find the definition of your tariff - look up your network's website and see if you can find it.
                    
                    If you can't find it, play it safe, by setting the start time for peak to the earlier time (say 7am), and the end time to the later time (say midnight), and setting this to false
                    -->
        <value>True</value>
      </setting>
      <setting name="TariffPeakOnWeekends" serializeAs="String">
        <!--Does your tariff have Peak on weekends, or is it all off peak.  If set to true, peak and off peak for weekends are ignored, and the charging window is 9pm to 9am-->
        <value>False</value>
      </setting>
      <setting name="TariffPeakStartWeekday" serializeAs="String">
        <!--What hour does Peak start - put 7 for 7am-->
        <value>7</value>
      </setting>
      <setting name="TariffPeakEndWeekday" serializeAs="String">
        <!--What hour does off-peak start (e.g. when does peak end).  If peak is from 7am to 11pm, the put 23 for 11pm  If it is midnight, please use 0-->
        <value>23</value>
      </setting>
      <setting name="TariffPeakStartWeekend" serializeAs="String">
        <!--If the weekend has peak hours, what is the start hour-->
        <value>0</value>
      </setting>
      <setting name="TariffPeakEndWeekend" serializeAs="String">
        <!--If the weekend has peak hours, what is the start hour for off peak-->
        <value>0</value>
      </setting>
      <setting name="TariffPeakRate" serializeAs="String">
        <!--NOT CURRENTLY USED - Planned for potential future automated decision on whether to charge or discharge or export.  Your peak rate - INCLUSIVE of GST-->
        <value>20.68</value>
      </setting>
      <setting name="TariffOffPeakRate" serializeAs="String">
        <!--NOT CURRENTLY USED - Planned for potential future automated decision on whether to charge or discharge or export.  Your off peak rate - INCLUSIVE of GST-->
        <value>10.34</value>
      </setting>
      <setting name="TariffFeedInRate" serializeAs="String">
        <!--NOT CURRENTLY USED - Planned for potential future automated decision on whether to charge or discharge or export.  Your feed in rate - INCLUSIVE of GST - feed in rates are always inclusive of GST-->
        <value>11.3</value>
      </setting>
    </PowerwallService.My.MySettings>
  </applicationSettings>
</configuration>